<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="by.test.rest.dao.EmployeesDao">

	<resultMap type="employee" id="employee">
		<id column="id" property="id"/>
		<result column="name" property="name"/>
		<result column="dob" property="dob"/>
		<result column="salary" property="salary"/>
		<result column="department_id" property="departmentId"/>
	</resultMap>

	<resultMap type="employeeView" id="employeeView">
		<id column="id" property="id"/>
		<result column="name" property="name"/>
		<result column="dob" property="dob"/>
		<result column="salary" property="salary"/>
		<result column="department_id" property="departmentId"/>
		<result column="department_name" property="departmentName"/>
	</resultMap>

	<insert id="create" parameterType="employee" keyProperty="id" useGeneratedKeys="true">
		INSERT INTO
			employees (name, dob, salary, department_id)
		VALUES
			(#{name}, #{dob}, #{salary}, #{departmentId})
	</insert>

	<select id="read" resultMap="employee" parameterType="Long">
		SELECT
			id,
			name,
			dob,
			salary,
			department_id
		FROM
			employees
		WHERE
			id = #{id}
	</select>

	<update id="update" parameterType="employee">
		UPDATE
			employees
		SET
			name = #{name},
			dob = #{dob},
			salary = #{salary},
			department_id = #{departmentId}
		WHERE
			id = #{id}
	</update>

	<delete id="delete" parameterType="Long">
		DELETE FROM
			employees
		WHERE
			id = #{id}
	</delete>

	<select id="findAll" resultMap="employee">
		SELECT
			id,
			name,
			dob,
			salary,
			department_id
		FROM
			employees
		ORDER BY
			id
	</select>
	
	<select id="findAllView" resultMap="employeeView">
		SELECT
			e.id,
			e.name,
			e.dob,
			e.salary,
			e.department_id,
			d.name as department_name
		FROM
			employees e
		LEFT JOIN
			departments d
		ON
			e.department_id = d.id
		ORDER BY
			e.id
	</select>

	<select id="findAllByDepartmentIdAndDOB" resultMap="employeeView">
		SELECT
			e.id,
			e.name,
			e.dob,
			e.salary,
			e.department_id,
			d.name as department_name
		FROM
			employees e
		LEFT JOIN
			departments d
		ON
			e.department_id = d.id
		<choose>
			<when test="startDate != null and endDate != null">
				WHERE
					e.department_id = #{id}
				AND
					e.dob BETWEEN #{startDate} AND #{endDate}
			</when>
			<when test="startDate != null and endDate == null">
				WHERE
					e.department_id = #{id}
				AND
					e.dob = #{startDate}
			</when>
			<otherwise>
				WHERE
					e.department_id = #{id}
			</otherwise>
		</choose>
		ORDER BY
			e.id
	</select>
</mapper>